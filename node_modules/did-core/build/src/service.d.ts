import { z } from 'zod';
import { serviceSchema } from './schemas';
import { ServiceTypes } from './serviceTypes';
export type ServiceOptions = z.input<typeof serviceSchema> & Record<string, unknown>;
export declare class Service {
    fullService: ServiceOptions;
    id: string;
    type: ServiceTypes | string | Array<ServiceTypes | string>;
    serviceEndpoint: string | Array<string> | Record<string, string>;
    constructor(options: ServiceOptions);
    /**
     * Checks whether the service type is registered inside the @{link https://www.w3.org/TR/did-spec-registries/#service-types | service types}
     *
     */
    isTypeInDidSpecRegistry(additionalAcceptedTypes?: string | Array<string>): boolean;
    toJSON(): Omit<this, "toJSON" | "isTypeInDidSpecRegistry" | "fullService">;
}
