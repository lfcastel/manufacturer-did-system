"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Service = void 0;
const schemas_1 = require("./schemas");
const serviceTypes_1 = require("./serviceTypes");
class Service {
    constructor(options) {
        this.fullService = options;
        const { id, type, serviceEndpoint } = schemas_1.serviceSchema.parse(options);
        this.id = id;
        this.type = type;
        this.serviceEndpoint = serviceEndpoint;
    }
    /**
     * Checks whether the service type is registered inside the @{link https://www.w3.org/TR/did-spec-registries/#service-types | service types}
     *
     */
    isTypeInDidSpecRegistry(additionalAcceptedTypes = []) {
        const additionalAcceptedTypesArray = typeof additionalAcceptedTypes === 'string'
            ? [additionalAcceptedTypes]
            : additionalAcceptedTypes;
        const allTypes = Object.values(serviceTypes_1.ServiceTypes).concat(additionalAcceptedTypesArray);
        return typeof this.type === 'string'
            ? allTypes.includes(this.type)
            : this.type.every(allTypes.includes);
    }
    toJSON() {
        const _a = this, { fullService } = _a, rest = __rest(_a, ["fullService"]);
        return rest;
    }
}
exports.Service = Service;
//# sourceMappingURL=service.js.map